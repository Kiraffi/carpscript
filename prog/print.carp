let foo = 4.0;
let moo = 2.0;
let bar = moo = moo + 1.0;
print bar + 7.0;
print moo;
print foo;
foo = foo + moo;
print foo;

{
    let foo = 180.0 + foo;
    print foo;
    print moo;
    print bar;
}

print foo;
print moo;
print bar;

if(1 > 2)
{
    print 1;
}
else if(2 > 3)
{
    print 2;
}
else
{
    print 3;
}

if(4 > 3 && 1 == 3 && 1 < 2)
{
    print "and truth";
}

if(4 > 3 || 3 == 3)
{
    print "or truth";
}

let i = 100;
while(i < 110)
{
    print i;
    i = i + 1;
}


let prev1 = 1;
let prev2 = 0;

let n = 2;
let fibSum = 0;
while(n < 130)
{
    fibSum = prev1 + prev2;
    prev2 = prev1;
    prev1 = fibSum;
    n = n + 1;
}

print fibSum;
let boo = 8;
print "Before func";
fn fooFn(boo: i32, hoo: f32)
{
   print "In foo fn";
   print moo;
   print hoo;
   print boo;
   return boo + 3;
}

print "Past func";

//fooFn();
print fooFn(13, 8.5);
print boo;
//print "out of foo";
//print fooValue;
//fooFn(2);
//print "out of foo again";
//fooFn(3);

print "testing";

